{"version":3,"file":"static/js/866.b3f0cde8.chunk.js","mappings":"sQACA,EAAuB,sBAAvB,EAAuD,yB,SCgDvD,MA3CA,WACE,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,WAAMC,GAAN,uFAEjBP,GAAa,GAFI,UAGYQ,EAAAA,EAAAA,IAAWD,GAHvB,OAGXE,EAHW,OAIjBX,EAAgBW,GAJC,gDAMjBP,EAAS,KAAIQ,SANI,yBAQjBV,GAAa,GARI,4EAAH,sDAWlBM,EAAaH,EAZO,CAarB,GAAE,CAACA,KAEF,gCACGJ,IAAa,SAACY,EAAA,EAAD,IACbV,IAAS,uBAAG,kCACb,eAAIW,UAAWC,EAAf,SACGC,MAAMC,QAAQlB,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAcmB,KAAI,SAAAC,GAChB,OACE,2BACE,+BAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAIC,UACT,8BAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAIE,YAFDF,EAAGV,GAKf,OAEoB,IAAxBV,EAAauB,SACZ,eAAIR,UAAWC,EAAf,SAA0B,0CAIjC,C","sources":["webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\",\"message\":\"Reviews_message__u6VQW\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { getReviews } from 'services/API';\nimport { Loader } from 'components/Loader/Loader';\nimport s from './Reviews.module.css';\n\nfunction Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviews = async id => {\n      try {\n        setIsLoading(true);\n        const receivedTrends = await getReviews(id);\n        setMovieReviews(receivedTrends);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops...Somesing went wrong..</p>}\n      <ul className={s.list}>\n        {Array.isArray(movieReviews) &&\n          movieReviews?.map(el => {\n            return (\n              <li key={el.id}>\n                <h3>{el?.author}</h3>\n                <p>{el?.content}</p>\n              </li>\n            );\n          })}\n      </ul>\n      {movieReviews.length === 0 && (\n        <h4 className={s.message}>There are no reviews for this movie</h4>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n"],"names":["useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchReviews","id","getReviews","receivedTrends","message","Loader","className","s","Array","isArray","map","el","author","content","length"],"sourceRoot":""}